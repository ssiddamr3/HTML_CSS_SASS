.form{
    &__group:not(:last-child){
        margin-bottom: 2rem;

    }
    &__input{
        font-size: 1.5rem;
        font-family: inherit; // force inherition
        padding: 1.5rem 2rem; // top botton & sides
        border-radius: 2px;
        background-color: rgba(white,.5);
        border: none;
        border-bottom: 3px solid transparent; // by adding this here, when focused there wont be any movement of the input fields.
        display: block;
        width: 90%;
        transition: all .3s;

        &:focus:invalid{
            border-color: orange;
        }


        &::-webkit-input-placeholder{
            color:#999;
        }


    
    }
    &__input:focus{
        outline: none;
        box-shadow: 0 1rem 2rem rgba(black,.1);
        border-bottom: 3px solid $color-primary;
    }

   

    
    &__label{
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top:.7rem;
        display: block;
        transition: all .3s;

    }
 // Note: ~ could be used for general siblings, + for immediate siblings. ONLY THE AFTER ELEMENTS, acc to the order
    &__input:placeholder-shown + &__label{
        opacity:0;
        visibility: hidden; // here we use both opoacity and visibility because it enables us to animate.
        transform: translateY(-4rem);
    }
    &__radio-input{
        display: none;
    }
    &__radio-group{
        width: 40%;
        display: inline-block;
    }

    &__radio-label{
        font-size: 1.6rem;
        cursor:pointer;
        position: relative;
        padding-left: 5rem;
        margin-bottom: 2rem;
    }

    &__radio-button{
            height: 3rem;
            width: 3rem;
            border: 5px solid $color-primary;
            border-radius: 50%;
            display: block;
            position: absolute;
            left:0;
            top:-1rem;


        &::after{
            content:'';
            display: block;
            height:1rem;
            width:1rem;
            border-radius: 50%;
            position: absolute;
            top:50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity:0;
            transition: opacity .2s;
        }

    }
    &__radio-input:checked ~ &__radio-label &__radio-button::after{
        opacity: 1;

    }
}

// Note: Input elements wont inherit the default elements.
// Note: height and widht only work with "block" or "inline-block".
// Note: absolute's position's element's parent does not have to be relative. It can be abs aswell but it just needs to be specified.
// Note: we cant apply css styles to radio button, check boxes, we can style them using labels and pseudo classes.